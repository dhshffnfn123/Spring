08_Controller.txt

	# 스프링 컨트롤러
	 
	 - JSP의 복잡했던 절차들을 많이 생략한 방식으로 웹 서버를 구현할 수 있음
	 	(포워드, 파라미터 꺼내기 등등...)
	 	
	 - 다양한 방식의 매개변수와 리턴 타입을 사용할 수 있음
	 
	 - GET/POST등 Method별로 별도의 처리도 어노테이션으로 손쉽게 처리 가능
	 
	 - 클래스 위에 @Controller 어노테이션을 달아놓으면 스프링이 알아서 수집해 감
	 
	
	@RequestMapping
	
	 - 사용자의 요청 URL과 해당 컨트롤러를 매핑시키는 어노테이션
	 - 클래스 위에도 사용할 수 있고 메서드 위에도 사용할 수 있다
	 - value : 매핑할 URL을 설정한다
	 - method : 요청 방식을 구분할 수 있다
	 - @GetMapping @PostMapping 등으로 메서드 선택을 간편화 할 수 있다
		
		
	# 컨트롤러의 파라미터 자동 수집 기능
	 	
	 - 컨트롤러의 매개변수 이름만 같아도 데이터가 알아서 매개변수로 전달된다
	 - 넘어오는 데이터와 알맞은 형태의 자바빈 클래스를 사용한다면
	   JSP의 request.getParameter를 할 필요가 없어진다
	 
	 
	   
	# Model 타입 파라미터
	
	 - Spring에서는 각 JSP영역 대신 Model에 어트리뷰트를 실어서 전달한다
	 - 컨트롤러의 매개변수에 Model타입 변수를 설정해놓으면 알아서 Model 인스턴스가 넘어오게 된다
	 - 자바빈 클래스를 사용한 파라미터는 자동으로 모델 어트리뷰트에 실려 뷰까지 전달된다
	 - 기본 타입 파라미터는 자동으로 전달되지는 않지만 @ModelAttribute 어노테이션을 통해 자동으로 전달할 수 있다
	 
	 
	
	# 컨트롤러의 리턴 타입
	 
	 1. 뷰를 찾는 타입
	 
	 - DispatcherServlet은 컨트롤러의 리턴값을 통해
	 - void : 요청 URI로 /WEB-INF/views/에서 동일한 경로상의 view를 찾는다
	 - String : 리턴한 문자열 경로로 /WEB-INF/views/에서 view를 찾는다
	 			문자열 리턴값 앞에 redirect:를 붙이면 리다이렉트한다
	 - ModelAndView : 데이터도 실어놓을 수 있고 다음으로 가야하는 view가 어딘지도 담고있다
	 
	 2. 뷰를 응답하지 않고 웹 페이지 이외의 것을 응답하는 타입
	  
	  - 자바빈 객체 타입 : 요청한 사용자에게 데이터를 생성하여 전달한다 (주로 JSON타입)
	  - ResponseEntity : 직접 원하는 타입의 응답을 생성할 수 있는 클래스
	  
	  
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   